#pragma version 8
txn ApplicationID
int 0
==
bnz main_l58
txn OnCompletion
int OptIn
==
bnz main_l57
txn OnCompletion
int CloseOut
==
txn OnCompletion
int UpdateApplication
==
||
txn OnCompletion
int DeleteApplication
==
||
bnz main_l56
txn OnCompletion
int NoOp
==
bnz main_l5
err
main_l5:
txna ApplicationArgs 0
byte "addSupportToken"
==
bnz main_l55
txna ApplicationArgs 0
byte "depositAndRegister"
==
bnz main_l51
txna ApplicationArgs 0
byte "deposit"
==
bnz main_l47
txna ApplicationArgs 0
byte "withdraw"
==
bnz main_l43
txna ApplicationArgs 0
byte "postSwap"
==
bnz main_l39
txna ApplicationArgs 0
byte "bondSwap"
==
bnz main_l38
txna ApplicationArgs 0
byte "lock"
==
bnz main_l37
txna ApplicationArgs 0
byte "release"
==
bnz main_l31
txna ApplicationArgs 0
byte "executeSwap"
==
bnz main_l21
txna ApplicationArgs 0
byte "paddingForEcdsa1"
==
bnz main_l20
txna ApplicationArgs 0
byte "paddingForEcdsa2"
==
bnz main_l19
txna ApplicationArgs 0
byte "paddingForEcdsa3"
==
bnz main_l18
err
main_l18:
int 1
return
main_l19:
int 1
return
main_l20:
int 1
return
main_l21:
txna ApplicationArgs 1
box_get
store 19
store 18
load 19
assert
load 18
store 17
load 17
byte 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
!=
load 17
extract 32 20
len
int 20
==
byte "bytes32 Sign to release a swap on Meson (Testnet)address Recipient"
keccak256
txna ApplicationArgs 1
txna Accounts 1
concat
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 21
store 20
load 20
load 21
concat
len
int 64
==
assert
byte "bytes32 Sign to release a swap on Meson (Testnet)address Recipient"
keccak256
txna ApplicationArgs 1
txna Accounts 1
concat
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 21
store 20
load 20
load 21
concat
keccak256
extract 12 20
load 17
extract 32 20
==
&&
&&
assert
txna ApplicationArgs 1
extract 21 5
btoi
txn FirstValidTime
int 3600
+
<
bnz main_l30
txna ApplicationArgs 1
byte 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
box_put
main_l23:
txna ApplicationArgs 5
btoi
bnz main_l29
txna ApplicationArgs 1
extract 31 1
btoi
int 32
>
txna ApplicationArgs 1
extract 31 1
btoi
int 255
<
&&
int 1
==
bnz main_l28
txna ApplicationArgs 1
extract 1 5
btoi
store 22
main_l26:
itxn_begin
int axfer
itxn_field TypeEnum
byte "TokenIndex:"
txna ApplicationArgs 1
extract 31 1
btoi
itob
concat
app_global_get
itxn_field XferAsset
load 17
extract 0 32
itxn_field AssetReceiver
load 22
itxn_field AssetAmount
itxn_submit
main_l27:
int 1
return
main_l28:
txna ApplicationArgs 1
extract 1 5
btoi
int 1000000000000
*
store 22
b main_l26
main_l29:
load 17
extract 0 32
byte "MesonLP:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 31 1
btoi
itob
concat
app_global_get
itob
concat
load 17
extract 0 32
byte "MesonLP:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 31 1
btoi
itob
concat
app_global_get
itob
concat
app_local_get
txna ApplicationArgs 1
extract 1 5
btoi
+
app_local_put
b main_l27
main_l30:
txna ApplicationArgs 1
box_del
assert
b main_l23
main_l31:
txna ApplicationArgs 1
txna ApplicationArgs 5
concat
keccak256
box_get
store 15
store 14
load 15
assert
load 14
byte 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
!=
assert
load 14
extract 37 32
store 11
txna ApplicationArgs 1
txna ApplicationArgs 5
concat
keccak256
byte 0x111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
box_put
load 11
byte 0x0000000000000000000000000000000000000000000000000000000000000000
!=
txna ApplicationArgs 1
extract 21 5
btoi
txn FirstValidTime
>
&&
txna ApplicationArgs 5
len
int 20
==
byte "bytes32 Sign to release a swap on Meson (Testnet)address Recipient"
keccak256
txna ApplicationArgs 1
load 11
concat
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 13
store 12
load 12
load 13
concat
len
int 64
==
assert
byte "bytes32 Sign to release a swap on Meson (Testnet)address Recipient"
keccak256
txna ApplicationArgs 1
load 11
concat
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 13
store 12
load 12
load 13
concat
keccak256
extract 12 20
txna ApplicationArgs 5
==
&&
&&
assert
txna ApplicationArgs 1
extract 1 5
btoi
txna ApplicationArgs 1
extract 16 5
btoi
-
store 10
txna ApplicationArgs 1
extract 6 1
btoi
int 64
&
int 0
>
!
bnz main_l36
main_l32:
txna ApplicationArgs 1
extract 28 1
btoi
int 32
>
txna ApplicationArgs 1
extract 28 1
btoi
int 255
<
&&
int 1
==
bnz main_l35
load 10
store 16
main_l34:
itxn_begin
int axfer
itxn_field TypeEnum
byte "TokenIndex:"
txna ApplicationArgs 1
extract 28 1
btoi
itob
concat
app_global_get
itxn_field XferAsset
load 11
itxn_field AssetReceiver
load 16
itxn_field AssetAmount
itxn_submit
int 1
return
main_l35:
load 10
int 1000000000000
*
store 16
b main_l34
main_l36:
load 10
txna ApplicationArgs 1
extract 1 5
btoi
int 10
*
int 10000
/
-
store 10
byte "ProtocolFee:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 28 1
btoi
itob
concat
app_global_get
itob
concat
byte "ProtocolFee:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 28 1
btoi
itob
concat
app_global_get
itob
concat
app_global_get
txna ApplicationArgs 1
extract 1 5
btoi
int 10
*
int 10000
/
+
app_global_put
b main_l32
main_l37:
txna ApplicationArgs 1
extract 26 2
btoi
int 283
==
txna ApplicationArgs 1
extract 0 1
btoi
int 1
==
&&
txn FirstValidTime
int 1200
+
txna ApplicationArgs 1
extract 21 5
btoi
int 300
-
<
&&
txna ApplicationArgs 5
len
int 20
==
byte "bytes32 Sign to request a swap on Meson (Testnet)"
keccak256
txna ApplicationArgs 1
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 9
store 8
load 8
load 9
concat
len
int 64
==
assert
byte "bytes32 Sign to request a swap on Meson (Testnet)"
keccak256
txna ApplicationArgs 1
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 9
store 8
load 8
load 9
concat
keccak256
extract 12 20
txna ApplicationArgs 5
==
&&
&&
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 28 1
btoi
itob
concat
app_global_get
itob
concat
app_local_get
txna ApplicationArgs 1
extract 1 5
btoi
txna ApplicationArgs 1
extract 16 5
btoi
-
>
&&
assert
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 28 1
btoi
itob
concat
app_global_get
itob
concat
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
txna ApplicationArgs 1
extract 28 1
btoi
itob
concat
app_global_get
itob
concat
app_local_get
txna ApplicationArgs 1
extract 1 5
btoi
txna ApplicationArgs 1
extract 16 5
btoi
-
-
app_local_put
txna ApplicationArgs 1
txna ApplicationArgs 5
concat
keccak256
int 69
box_create
assert
txna ApplicationArgs 1
txna ApplicationArgs 5
concat
keccak256
txn Sender
txn FirstValidTime
int 1200
+
itob
extract 3 5
concat
txna Accounts 1
concat
box_put
int 1
return
main_l38:
txna ApplicationArgs 1
box_get
store 7
store 6
load 7
assert
load 6
extract 0 32
byte 0x0000000000000000000000000000000000000000000000000000000000000000
==
assert
txna ApplicationArgs 1
int 0
txn Sender
box_replace
int 1
return
main_l39:
txna ApplicationArgs 1
extract 0 1
btoi
int 1
==
txna ApplicationArgs 1
extract 29 2
btoi
int 283
==
&&
txna ApplicationArgs 1
extract 1 5
btoi
int 100000000000
<
&&
txna ApplicationArgs 1
extract 21 5
btoi
txn FirstValidTime
-
int 3600
>
&&
txna ApplicationArgs 1
extract 21 5
btoi
txn FirstValidTime
-
int 7200
<
&&
txna ApplicationArgs 5
len
int 20
==
byte "bytes32 Sign to request a swap on Meson (Testnet)"
keccak256
txna ApplicationArgs 1
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 4
store 3
load 3
load 4
concat
len
int 64
==
assert
byte "bytes32 Sign to request a swap on Meson (Testnet)"
keccak256
txna ApplicationArgs 1
keccak256
concat
keccak256
txna ApplicationArgs 4
btoi
txna ApplicationArgs 2
txna ApplicationArgs 3
ecdsa_pk_recover Secp256k1
store 4
store 3
load 3
load 4
concat
keccak256
extract 12 20
txna ApplicationArgs 5
==
&&
&&
txna ApplicationArgs 1
extract 1 5
btoi
int 0
>
assert
txna ApplicationArgs 1
extract 31 1
btoi
int 32
>
txna ApplicationArgs 1
extract 31 1
btoi
int 255
<
&&
int 1
==
bnz main_l42
txna ApplicationArgs 1
extract 1 5
btoi
store 5
main_l41:
int 1
gtxns TypeEnum
int axfer
==
int 1
gtxns Sender
txn Sender
==
&&
int 1
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
int 1
gtxns XferAsset
byte "TokenIndex:"
txna ApplicationArgs 1
extract 31 1
btoi
itob
concat
app_global_get
==
&&
int 1
gtxns AssetAmount
txna ApplicationArgs 1
extract 1 5
btoi
==
&&
&&
assert
txna ApplicationArgs 1
int 84
box_create
assert
txna ApplicationArgs 1
byte 0x0000000000000000000000000000000000000000000000000000000000000000
txna ApplicationArgs 5
concat
txn Sender
concat
box_put
int 1
return
main_l42:
txna ApplicationArgs 1
extract 1 5
btoi
int 1000000000000
*
store 5
b main_l41
main_l43:
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
itob
concat
app_global_get
itob
concat
app_local_get
txna ApplicationArgs 1
btoi
>=
assert
txn Sender
byte "MesonLP:"
txna Assets 0
itob
concat
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
itob
concat
app_global_get
itob
concat
app_local_get
txna ApplicationArgs 1
btoi
-
app_local_put
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 32
>
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 255
<
&&
int 1
==
bnz main_l46
txna ApplicationArgs 1
btoi
store 2
main_l45:
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
txn Sender
itxn_field AssetReceiver
load 2
itxn_field AssetAmount
itxn_submit
int 1
return
main_l46:
txna ApplicationArgs 1
btoi
int 1000000000000
*
store 2
b main_l45
main_l47:
txna ApplicationArgs 1
btoi
int 0
>
assert
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 32
>
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 255
<
&&
int 1
==
bnz main_l50
txna ApplicationArgs 1
btoi
store 1
main_l49:
int 1
gtxns TypeEnum
int axfer
==
int 1
gtxns Sender
txn Sender
==
&&
int 1
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
int 1
gtxns XferAsset
txna Assets 0
==
&&
int 1
gtxns AssetAmount
txna ApplicationArgs 1
btoi
==
&&
assert
txn Sender
byte "MesonLP:"
txna Assets 0
itob
concat
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
itob
concat
app_global_get
itob
concat
app_local_get
txna ApplicationArgs 1
btoi
+
app_local_put
int 1
return
main_l50:
txna ApplicationArgs 1
btoi
int 1000000000000
*
store 1
b main_l49
main_l51:
txna ApplicationArgs 1
btoi
int 0
>
assert
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 32
>
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 255
<
&&
int 1
==
bnz main_l54
txna ApplicationArgs 1
btoi
store 0
main_l53:
int 1
gtxns TypeEnum
int axfer
==
int 1
gtxns Sender
txn Sender
==
&&
int 1
gtxns AssetReceiver
global CurrentApplicationAddress
==
&&
int 1
gtxns XferAsset
txna Assets 0
==
&&
int 1
gtxns AssetAmount
txna ApplicationArgs 1
btoi
==
&&
txn Sender
byte "MesonLP:"
byte "TokenIndex:"
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
itob
concat
app_global_get
itob
concat
app_local_get
int 0
==
&&
assert
txn Sender
byte "MesonLP:"
txna Assets 0
itob
concat
txna ApplicationArgs 1
btoi
app_local_put
int 1
return
main_l54:
txna ApplicationArgs 1
btoi
int 1000000000000
*
store 0
b main_l53
main_l55:
txna ApplicationArgs 1
btoi
int 256
<
assert
txna ApplicationArgs 1
btoi
int 0
!=
assert
txna Assets 0
int 0
!=
assert
byte "TokenIndex:"
txna ApplicationArgs 1
btoi
itob
concat
app_global_get
int 0
==
assert
byte "AssetId:"
txna Assets 0
itob
concat
app_global_get
int 0
==
assert
byte "TokenIndex:"
txna ApplicationArgs 1
btoi
itob
concat
txna Assets 0
app_global_put
byte "AssetId:"
txna Assets 0
itob
concat
txna ApplicationArgs 1
btoi
app_global_put
byte "ProtocolFee:"
txna Assets 0
itob
concat
int 0
app_global_put
itxn_begin
int axfer
itxn_field TypeEnum
txna Assets 0
itxn_field XferAsset
global CurrentApplicationAddress
itxn_field AssetReceiver
int 0
itxn_field AssetAmount
itxn_submit
int 1
return
main_l56:
int 0
return
main_l57:
int 1
return
main_l58:
int 1
return